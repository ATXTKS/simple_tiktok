// Code generated by hertz generator.

package feed

import (
	"context"
	"net/http"
	"simple_tiktok/biz/dal"
	feed "simple_tiktok/biz/model/feed"
	"simple_tiktok/biz/model/user"
	"simple_tiktok/biz/redis"
	"strconv"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// GetVideoList .
// @router /douyin/feed/ [GET]
func GetVideoList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req feed.FeedRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(feed.FeedResponse)
	message := ""
	nextTime := int64(114514)
	resp.StatusMsg = &message
	resp.NextTime = &nextTime

	videos, err := dal.FindVideoAll()
	if err != nil {
		message = "数据库查询失败"
		resp.StatusCode = 1
		c.JSON(http.StatusBadRequest, resp)
		return
	}

	// 假设你有一个名为videoSlice的存储了多个VideoInfo的切片

	var videoList []*feed.VideoInfo
	for _, v := range videos {
		//fmt.Println(v.CoverPath)
		users, _ := dal.FindUserByName(v.UserName)
		likeCount, _ := redis.GetLikeCount(int64(v.ID))
		commetCount, _ := dal.QueryCommentsCount(int64(v.ID))
		isLike := false
		likeInfo, _ := redis.GetLikeInfo(strconv.Itoa(int(v.ID)), strconv.Itoa(int(users[0].ID)))
		if likeInfo != nil {
			isLike = true
		}

		video := &feed.VideoInfo{
			ID: int64(v.ID),
			Author: &user.UserInfo{
				ID:            int64(users[0].ID),
				Name:          v.UserName,
				FollowerCount: 0,
				IsFollow:      false,
			},
			PlayURL:       "http://192.168.137.1:8888/data/" + v.VideoPath,
			CoverURL:      "http://192.168.137.1:8888/data/" + v.CoverPath,
			FavoriteCount: likeCount,
			CommentCount:  commetCount,
			IsFavorite:    isLike,
			Title:         v.Title,
		}
		videoList = append(videoList, video)
	}

	resp.VideoList = videoList
	message = "success"
	c.JSON(consts.StatusOK, resp)
}
