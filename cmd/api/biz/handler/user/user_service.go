// Code generated by hertz generator.

package user

import (
	"context"
	"fmt"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	ModelUser "simple_tiktok/cmd/api/biz/model/user"
	UserRpc "simple_tiktok/cmd/api/biz/rpc/user"
	"simple_tiktok/kitex_gen/user"
)

// UserRegister .
// @router /douyin/user/register/ [POST]
func UserRegister(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ModelUser.RegisterRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	resp, err := UserRpc.CreateUser(ctx, &user.RegisterRequest{
		Username: req.Username,
		Password: req.Password,
	})
	if err != nil {
		resp = new(user.RegisterResponse)
		resp.StatusCode = 1
		resp.StatusMsg = err.Error()
		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	c.JSON(consts.StatusOK, resp)
}

// UserLogin .
// @router /douyin/user/login/ [POST]
func UserLogin(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ModelUser.LoginRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp, err := UserRpc.UserLogin(ctx, &user.LoginRequest{
		Username: req.Username,
		Password: req.Password,
	})
	if err != nil {
		resp = new(user.LoginResponse)
		resp.StatusCode = 1
		errMsg := err.Error()
		resp.StatusMsg = &errMsg
		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	c.JSON(consts.StatusOK, resp)
}

// GetUserInfo .
// @router /douyin/user/ [GET]
func GetUserInfo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req ModelUser.UserInfoRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	fmt.Println("=================================")
	fmt.Println(req)
	fmt.Println(c.PostForm("user_id"))
	fmt.Println(c.PostForm("token"))
	fmt.Println("=================================")
	resp, err := UserRpc.GetUserInfo(ctx, &user.UserInfoRequest{
		UserId: req.UserID,
		Token:  req.Token,
	})
	if err != nil {
		resp = new(user.UserInfoResponse)
		resp.StatusCode = 1
		errMsg := err.Error()
		resp.StatusMsg = &errMsg
		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	c.JSON(consts.StatusOK, resp)
}
